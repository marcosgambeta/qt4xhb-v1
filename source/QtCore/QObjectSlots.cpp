//
// Qt4xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 4
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

#include "QObjectSlots.hpp"

QObjectSlots::QObjectSlots(QObject *parent) : QObject(parent)
{
}

QObjectSlots::~QObjectSlots()
{
}

void QObjectSlots::destroyed(QObject *obj)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "destroyed(QObject*)");

  if (cb != NULL) {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QOBJECT");
    PHB_ITEM pObj = Qt4xHb::Signals_return_qobject(obj, "QOBJECT");

    hb_vmEvalBlockV(cb, 2, pSender, pObj);

    hb_itemRelease(pSender);
    hb_itemRelease(pObj);
    Qt4xHb::Signals_disconnect_signal(object, "destroyed(QObject*)");
  }
}

void QObjectSlots_connect_signal(const QString &signal, const QString &slot)
{
  QObject *obj = qobject_cast<QObject *>(Qt4xHb::getQObjectPointerFromSelfItem());

  if (obj != NULL) {
    QObjectSlots *s = QCoreApplication::instance()->findChild<QObjectSlots *>();

    if (s == NULL) {
      s = new QObjectSlots();
      s->moveToThread(QCoreApplication::instance()->thread());
      s->setParent(QCoreApplication::instance());
    }

    hb_retl(Qt4xHb::Signals_connection_disconnection(s, signal, slot));
  } else {
    hb_retl(false);
  }
}
