//
// Qt4xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 4
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

#include "QGraphicsObjectSlots.hpp"

QGraphicsObjectSlots::QGraphicsObjectSlots(QObject *parent) : QObject(parent)
{
}

QGraphicsObjectSlots::~QGraphicsObjectSlots()
{
}

void QGraphicsObjectSlots::enabledChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "enabledChanged()");

  if (cb != NULL) {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QGRAPHICSOBJECT");

    hb_vmEvalBlockV(cb, 1, pSender);

    hb_itemRelease(pSender);
  }
}

void QGraphicsObjectSlots::opacityChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "opacityChanged()");

  if (cb != NULL) {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QGRAPHICSOBJECT");

    hb_vmEvalBlockV(cb, 1, pSender);

    hb_itemRelease(pSender);
  }
}

void QGraphicsObjectSlots::parentChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "parentChanged()");

  if (cb != NULL) {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QGRAPHICSOBJECT");

    hb_vmEvalBlockV(cb, 1, pSender);

    hb_itemRelease(pSender);
  }
}

void QGraphicsObjectSlots::rotationChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "rotationChanged()");

  if (cb != NULL) {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QGRAPHICSOBJECT");

    hb_vmEvalBlockV(cb, 1, pSender);

    hb_itemRelease(pSender);
  }
}

void QGraphicsObjectSlots::scaleChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "scaleChanged()");

  if (cb != NULL) {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QGRAPHICSOBJECT");

    hb_vmEvalBlockV(cb, 1, pSender);

    hb_itemRelease(pSender);
  }
}

void QGraphicsObjectSlots::visibleChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "visibleChanged()");

  if (cb != NULL) {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QGRAPHICSOBJECT");

    hb_vmEvalBlockV(cb, 1, pSender);

    hb_itemRelease(pSender);
  }
}

void QGraphicsObjectSlots::xChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "xChanged()");

  if (cb != NULL) {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QGRAPHICSOBJECT");

    hb_vmEvalBlockV(cb, 1, pSender);

    hb_itemRelease(pSender);
  }
}

void QGraphicsObjectSlots::yChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "yChanged()");

  if (cb != NULL) {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QGRAPHICSOBJECT");

    hb_vmEvalBlockV(cb, 1, pSender);

    hb_itemRelease(pSender);
  }
}

void QGraphicsObjectSlots::zChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "zChanged()");

  if (cb != NULL) {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QGRAPHICSOBJECT");

    hb_vmEvalBlockV(cb, 1, pSender);

    hb_itemRelease(pSender);
  }
}

void QGraphicsObjectSlots_connect_signal(const QString &signal, const QString &slot)
{
  QGraphicsObject *obj = qobject_cast<QGraphicsObject *>(Qt4xHb::getQObjectPointerFromSelfItem());

  if (obj != NULL) {
    QGraphicsObjectSlots *s = QCoreApplication::instance()->findChild<QGraphicsObjectSlots *>();

    if (s == NULL) {
      s = new QGraphicsObjectSlots();
      s->moveToThread(QCoreApplication::instance()->thread());
      s->setParent(QCoreApplication::instance());
    }

    hb_retl(Qt4xHb::Signals_connection_disconnection(s, signal, slot));
  } else {
    hb_retl(false);
  }
}
