//
// Qt4xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 4
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT4XHB_NO_REQUESTS
REQUEST QICON
#endif

CLASS QStyleOptionToolBox INHERIT QStyleOption

   METHOD new
   METHOD text
   METHOD setText
   METHOD icon
   METHOD setIcon

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QStyleOptionToolBox
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtGui/QStyleOptionToolBox>

#include "qt4xhb_common.hpp"
#include "qt4xhb_macros.hpp"
#include "qt4xhb_utils.hpp"

HB_FUNC_STATIC(QSTYLEOPTIONTOOLBOX_NEW)
{
  if (ISNUMPAR(0)) {
    // QStyleOptionToolBox()
    QStyleOptionToolBox *obj = new QStyleOptionToolBox();
    Qt4xHb::returnNewObject(obj, true);
  }
  else if (ISNUMPAR(1) && ISQSTYLEOPTIONTOOLBOX(1))
  {
    // QStyleOptionToolBox(const QStyleOptionToolBox &other)
    QStyleOptionToolBox *obj = new QStyleOptionToolBox(*PQSTYLEOPTIONTOOLBOX(1));
    Qt4xHb::returnNewObject(obj, true);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

// QString text
HB_FUNC_STATIC(QSTYLEOPTIONTOOLBOX_TEXT)
{
  QStyleOptionToolBox *obj = static_cast<QStyleOptionToolBox *>(Qt4xHb::itemGetPtrStackSelfItem());

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      RQSTRING(obj->text);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONTOOLBOX_SETTEXT)
{
  QStyleOptionToolBox *obj = static_cast<QStyleOptionToolBox *>(Qt4xHb::itemGetPtrStackSelfItem());

  if (obj != NULL) {
    if (ISNUMPAR(1) && HB_ISCHAR(1))
    {
      obj->text = PQSTRING(1);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

// QIcon icon
HB_FUNC_STATIC(QSTYLEOPTIONTOOLBOX_ICON)
{
  QStyleOptionToolBox *obj = static_cast<QStyleOptionToolBox *>(Qt4xHb::itemGetPtrStackSelfItem());

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      QIcon *ptr = new QIcon(obj->icon);
      Qt4xHb::createReturnClass(ptr, "QICON", true);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONTOOLBOX_SETICON)
{
  QStyleOptionToolBox *obj = static_cast<QStyleOptionToolBox *>(Qt4xHb::itemGetPtrStackSelfItem());

  if (obj != NULL) {
    if (ISNUMPAR(1) && ISQICON(1))
    {
      obj->icon = *PQICON(1);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

#pragma ENDDUMP
