//
// Qt4xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 4
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT4XHB_NO_REQUESTS
REQUEST QICON
#endif

CLASS QStyleOptionHeader INHERIT QStyleOption

   METHOD new
   METHOD section
   METHOD setSection
   METHOD text
   METHOD setText
   METHOD textAlignment
   METHOD setTextAlignment
   METHOD icon
   METHOD setIcon
   METHOD iconAlignment
   METHOD setIconAlignment
   METHOD position
   METHOD setPosition
   METHOD selectedPosition
   METHOD setSelectedPosition
   METHOD sortIndicator
   METHOD setSortIndicator
   METHOD orientation
   METHOD setOrientation

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QStyleOptionHeader
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtGui/QStyleOptionHeader>

#include "qt4xhb_common.hpp"
#include "qt4xhb_macros.hpp"
#include "qt4xhb_utils.hpp"

#define GET_PTR_FROM_SELF(p)                                                                                           \
  QStyleOptionHeader *p = static_cast<QStyleOptionHeader *>(Qt4xHb::itemGetPtrStackSelfItem())

HB_FUNC_STATIC(QSTYLEOPTIONHEADER_NEW)
{
  if (ISNUMPAR(0)) {
    // QStyleOptionHeader()
    QStyleOptionHeader *obj = new QStyleOptionHeader();
    Qt4xHb::returnNewObject(obj, true);
  } else if (ISNUMPAR(1) && ISQSTYLEOPTIONHEADER(1)) {
    // QStyleOptionHeader(const QStyleOptionHeader &other)
    QStyleOptionHeader *obj = new QStyleOptionHeader(*PQSTYLEOPTIONHEADER(1));
    Qt4xHb::returnNewObject(obj, true);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

// int section
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_SECTION)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      RINT(obj->section);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_SETSECTION)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
      obj->section = PINT(1);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

// QString text
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_TEXT)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      RQSTRING(obj->text);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_SETTEXT)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(1) && HB_ISCHAR(1)) {
      obj->text = PQSTRING(1);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

// Qt::Alignment textAlignment
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_TEXTALIGNMENT)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      RENUM(obj->textAlignment);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_SETTEXTALIGNMENT)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
      obj->textAlignment = static_cast<Qt::Alignment>(hb_parni(1));
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

// QIcon icon
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_ICON)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      QIcon *ptr = new QIcon(obj->icon);
      Qt4xHb::createReturnClass(ptr, "QICON", true);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_SETICON)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(1) && ISQICON(1)) {
      obj->icon = *PQICON(1);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

// Qt::Alignment iconAlignment
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_ICONALIGNMENT)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      RENUM(obj->iconAlignment);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_SETICONALIGNMENT)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
      obj->iconAlignment = static_cast<Qt::Alignment>(hb_parni(1));
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

// SectionPosition position
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_POSITION)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      RENUM(obj->position);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_SETPOSITION)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
      obj->position = static_cast<QStyleOptionHeader::SectionPosition>(hb_parni(1));
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

// SelectedPosition selectedPosition
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_SELECTEDPOSITION)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      RENUM(obj->selectedPosition);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_SETSELECTEDPOSITION)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
      obj->selectedPosition = static_cast<QStyleOptionHeader::SelectedPosition>(hb_parni(1));
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

// SortIndicator sortIndicator
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_SORTINDICATOR)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      RENUM(obj->sortIndicator);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_SETSORTINDICATOR)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
      obj->sortIndicator = static_cast<QStyleOptionHeader::SortIndicator>(hb_parni(1));
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

// Qt::Orientation orientation
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_ORIENTATION)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      RENUM(obj->orientation);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONHEADER_SETORIENTATION)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
      obj->orientation = static_cast<Qt::Orientation>(hb_parni(1));
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

#pragma ENDDUMP
