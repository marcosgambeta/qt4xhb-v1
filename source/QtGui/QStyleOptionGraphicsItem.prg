//
// Qt4xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 4
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT4XHB_NO_REQUESTS
REQUEST QMATRIX
REQUEST QRECTF
#endif

CLASS QStyleOptionGraphicsItem INHERIT QStyleOption

   METHOD new
   METHOD levelOfDetailFromTransform
   METHOD exposedRect
   METHOD setExposedRect
   METHOD matrix
   METHOD setMatrix
   METHOD levelOfDetail
   METHOD setLevelOfDetail

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QStyleOptionGraphicsItem
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtGui/QStyleOptionGraphicsItem>

#include "qt4xhb_common.hpp"
#include "qt4xhb_macros.hpp"
#include "qt4xhb_utils.hpp"

#define GET_PTR_FROM_SELF(p)                                                                                           \
  QStyleOptionGraphicsItem *p = static_cast<QStyleOptionGraphicsItem *>(Qt4xHb::itemGetPtrStackSelfItem())

HB_FUNC_STATIC(QSTYLEOPTIONGRAPHICSITEM_NEW)
{
  if (ISNUMPAR(0)) {
    // QStyleOptionGraphicsItem()
    QStyleOptionGraphicsItem *obj = new QStyleOptionGraphicsItem();
    Qt4xHb::returnNewObject(obj, true);
  } else if (ISNUMPAR(1) && ISQSTYLEOPTIONGRAPHICSITEM(1)) {
    // QStyleOptionGraphicsItem(const QStyleOptionGraphicsItem &other)
    QStyleOptionGraphicsItem *obj = new QStyleOptionGraphicsItem(*PQSTYLEOPTIONGRAPHICSITEM(1));
    Qt4xHb::returnNewObject(obj, true);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

// static qreal levelOfDetailFromTransform(const QTransform &worldTransform)
HB_FUNC_STATIC(QSTYLEOPTIONGRAPHICSITEM_LEVELOFDETAILFROMTRANSFORM)
{
#ifndef QT4XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(1) && ISQTRANSFORM(1)) {
#endif
    RQREAL(QStyleOptionGraphicsItem::levelOfDetailFromTransform(*PQTRANSFORM(1)));
#ifndef QT4XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

// QRectF exposedRect
HB_FUNC_STATIC(QSTYLEOPTIONGRAPHICSITEM_EXPOSEDRECT)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      QRectF *ptr = new QRectF(obj->exposedRect);
      Qt4xHb::createReturnClass(ptr, "QRECTF", true);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONGRAPHICSITEM_SETEXPOSEDRECT)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(1) && ISQRECTF(1)) {
      obj->exposedRect = *PQRECTF(1);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

// QMatrix matrix
HB_FUNC_STATIC(QSTYLEOPTIONGRAPHICSITEM_MATRIX)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      QMatrix *ptr = new QMatrix(obj->matrix);
      Qt4xHb::createReturnClass(ptr, "QMATRIX", true);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONGRAPHICSITEM_SETMATRIX)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(1) && ISQMATRIX(1)) {
      obj->matrix = *PQMATRIX(1);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

// qreal levelOfDetail
HB_FUNC_STATIC(QSTYLEOPTIONGRAPHICSITEM_LEVELOFDETAIL)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      RQREAL(obj->levelOfDetail);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONGRAPHICSITEM_SETLEVELOFDETAIL)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
      obj->levelOfDetail = PQREAL(1);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

#pragma ENDDUMP
