//
// Qt4xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 4
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

#include "QFileDialogSlots.hpp"

QFileDialogSlots::QFileDialogSlots(QObject *parent) : QObject(parent)
{
}

QFileDialogSlots::~QFileDialogSlots()
{
}

void QFileDialogSlots::currentChanged(const QString &path)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "currentChanged(QString)");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QFILEDIALOG");
    PHB_ITEM pPath = hb_itemPutC(NULL, QSTRINGTOSTRING(path));

    hb_vmEvalBlockV(cb, 2, pSender, pPath);

    hb_itemRelease(pSender);
    hb_itemRelease(pPath);
  }
}

void QFileDialogSlots::directoryEntered(const QString &directory)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "directoryEntered(QString)");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QFILEDIALOG");
    PHB_ITEM pDirectory = hb_itemPutC(NULL, QSTRINGTOSTRING(directory));

    hb_vmEvalBlockV(cb, 2, pSender, pDirectory);

    hb_itemRelease(pSender);
    hb_itemRelease(pDirectory);
  }
}

void QFileDialogSlots::fileSelected(const QString &file)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "fileSelected(QString)");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QFILEDIALOG");
    PHB_ITEM pFile = hb_itemPutC(NULL, QSTRINGTOSTRING(file));

    hb_vmEvalBlockV(cb, 2, pSender, pFile);

    hb_itemRelease(pSender);
    hb_itemRelease(pFile);
  }
}

void QFileDialogSlots::filesSelected(const QStringList &selected)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "filesSelected(QStringList)");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QFILEDIALOG");
    PHB_ITEM pSelected = hb_itemArrayNew(0);
    const int count = selected.count();
    for (int i = 0; i < count; i++)
    {
      PHB_ITEM pTempItem = hb_itemPutC(NULL, QSTRINGTOSTRING(selected[i]));
      hb_arrayAddForward(pSelected, pTempItem);
      hb_itemRelease(pTempItem);
    }

    hb_vmEvalBlockV(cb, 2, pSender, pSelected);

    hb_itemRelease(pSender);
    hb_itemRelease(pSelected);
  }
}

void QFileDialogSlots::filterSelected(const QString &filter)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "filterSelected(QString)");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QFILEDIALOG");
    PHB_ITEM pFilter = hb_itemPutC(NULL, QSTRINGTOSTRING(filter));

    hb_vmEvalBlockV(cb, 2, pSender, pFilter);

    hb_itemRelease(pSender);
    hb_itemRelease(pFilter);
  }
}

void QFileDialogSlots_connect_signal(const QString &signal, const QString &slot)
{
  QFileDialog *obj = qobject_cast<QFileDialog *>(Qt4xHb::getQObjectPointerFromSelfItem());

  if (obj != NULL)
  {
    QFileDialogSlots *s = QCoreApplication::instance()->findChild<QFileDialogSlots *>();

    if (s == NULL)
    {
      s = new QFileDialogSlots();
      s->moveToThread(QCoreApplication::instance()->thread());
      s->setParent(QCoreApplication::instance());
    }

    hb_retl(Qt4xHb::Signals_connection_disconnection(s, signal, slot));
  }
  else
  {
    hb_retl(false);
  }
}
