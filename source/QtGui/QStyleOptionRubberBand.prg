//
// Qt4xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 4
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT4XHB_NO_REQUESTS
#endif

CLASS QStyleOptionRubberBand INHERIT QStyleOption

   METHOD new
   METHOD shape
   METHOD setShape
   METHOD opaque
   METHOD setOpaque

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QStyleOptionRubberBand
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtGui/QStyleOptionRubberBand>

#include "qt4xhb_common.hpp"
#include "qt4xhb_macros.hpp"
#include "qt4xhb_utils.hpp"

#define GET_PTR_FROM_SELF(p)                                                                                           \
  QStyleOptionRubberBand *p = static_cast<QStyleOptionRubberBand *>(Qt4xHb::itemGetPtrStackSelfItem())

HB_FUNC_STATIC(QSTYLEOPTIONRUBBERBAND_NEW)
{
  if (ISNUMPAR(0)) {
    // QStyleOptionRubberBand()
    QStyleOptionRubberBand *obj = new QStyleOptionRubberBand();
    Qt4xHb::returnNewObject(obj, true);
  } else if (ISNUMPAR(1) && ISQSTYLEOPTIONRUBBERBAND(1)) {
    // QStyleOptionRubberBand(const QStyleOptionRubberBand &other)
    QStyleOptionRubberBand *obj = new QStyleOptionRubberBand(*PQSTYLEOPTIONRUBBERBAND(1));
    Qt4xHb::returnNewObject(obj, true);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

// QRubberBand::Shape shape
HB_FUNC_STATIC(QSTYLEOPTIONRUBBERBAND_SHAPE)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      RENUM(obj->shape);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONRUBBERBAND_SETSHAPE)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
      obj->shape = static_cast<QRubberBand::Shape>(hb_parni(1));
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

// bool opaque
HB_FUNC_STATIC(QSTYLEOPTIONRUBBERBAND_OPAQUE)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(0)) {
      RBOOL(obj->opaque);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }
}
HB_FUNC_STATIC(QSTYLEOPTIONRUBBERBAND_SETOPAQUE)
{
  GET_PTR_FROM_SELF(obj);

  if (obj != NULL) {
    if (ISNUMPAR(1) && HB_ISLOG(1)) {
      obj->opaque = PBOOL(1);
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
  }

  hb_itemReturn(hb_stackSelfItem());
}

#pragma ENDDUMP
