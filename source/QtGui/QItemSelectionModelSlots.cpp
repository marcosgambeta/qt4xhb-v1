//
// Qt4xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 4
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

#include "QItemSelectionModelSlots.hpp"

QItemSelectionModelSlots::QItemSelectionModelSlots(QObject *parent) : QObject(parent)
{
}

QItemSelectionModelSlots::~QItemSelectionModelSlots()
{
}

void QItemSelectionModelSlots::currentChanged(const QModelIndex &current, const QModelIndex &previous)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "currentChanged(QModelIndex,QModelIndex)");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QITEMSELECTIONMODEL");
    PHB_ITEM pCurrent = Qt4xHb::Signals_return_object((void *)&current, "QMODELINDEX");
    PHB_ITEM pPrevious = Qt4xHb::Signals_return_object((void *)&previous, "QMODELINDEX");

    hb_vmEvalBlockV(cb, 3, pSender, pCurrent, pPrevious);

    hb_itemRelease(pSender);
    hb_itemRelease(pCurrent);
    hb_itemRelease(pPrevious);
  }
}

void QItemSelectionModelSlots::currentColumnChanged(const QModelIndex &current, const QModelIndex &previous)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "currentColumnChanged(QModelIndex,QModelIndex)");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QITEMSELECTIONMODEL");
    PHB_ITEM pCurrent = Qt4xHb::Signals_return_object((void *)&current, "QMODELINDEX");
    PHB_ITEM pPrevious = Qt4xHb::Signals_return_object((void *)&previous, "QMODELINDEX");

    hb_vmEvalBlockV(cb, 3, pSender, pCurrent, pPrevious);

    hb_itemRelease(pSender);
    hb_itemRelease(pCurrent);
    hb_itemRelease(pPrevious);
  }
}

void QItemSelectionModelSlots::currentRowChanged(const QModelIndex &current, const QModelIndex &previous)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "currentRowChanged(QModelIndex,QModelIndex)");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QITEMSELECTIONMODEL");
    PHB_ITEM pCurrent = Qt4xHb::Signals_return_object((void *)&current, "QMODELINDEX");
    PHB_ITEM pPrevious = Qt4xHb::Signals_return_object((void *)&previous, "QMODELINDEX");

    hb_vmEvalBlockV(cb, 3, pSender, pCurrent, pPrevious);

    hb_itemRelease(pSender);
    hb_itemRelease(pCurrent);
    hb_itemRelease(pPrevious);
  }
}

void QItemSelectionModelSlots::selectionChanged(const QItemSelection &selected, const QItemSelection &deselected)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "selectionChanged(QItemSelection,QItemSelection)");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QITEMSELECTIONMODEL");
    PHB_ITEM pSelected = Qt4xHb::Signals_return_object((void *)&selected, "QITEMSELECTION");
    PHB_ITEM pDeselected = Qt4xHb::Signals_return_object((void *)&deselected, "QITEMSELECTION");

    hb_vmEvalBlockV(cb, 3, pSender, pSelected, pDeselected);

    hb_itemRelease(pSender);
    hb_itemRelease(pSelected);
    hb_itemRelease(pDeselected);
  }
}

void QItemSelectionModelSlots_connect_signal(const QString &signal, const QString &slot)
{
  QItemSelectionModel *obj = qobject_cast<QItemSelectionModel *>(Qt4xHb::getQObjectPointerFromSelfItem());

  if (obj != NULL)
  {
    QItemSelectionModelSlots *s = QCoreApplication::instance()->findChild<QItemSelectionModelSlots *>();

    if (s == NULL)
    {
      s = new QItemSelectionModelSlots();
      s->moveToThread(QCoreApplication::instance()->thread());
      s->setParent(QCoreApplication::instance());
    }

    hb_retl(Qt4xHb::Signals_connection_disconnection(s, signal, slot));
  }
  else
  {
    hb_retl(false);
  }
}
