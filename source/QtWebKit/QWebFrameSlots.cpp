//
// Qt4xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 4
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

#include "QWebFrameSlots.hpp"

QWebFrameSlots::QWebFrameSlots(QObject *parent) : QObject(parent)
{
}

QWebFrameSlots::~QWebFrameSlots()
{
}

void QWebFrameSlots::contentsSizeChanged(const QSize &size)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "contentsSizeChanged(QSize)");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QWEBFRAME");
    PHB_ITEM pSize = Qt4xHb::Signals_return_object((void *)&size, "QSIZE");

    hb_vmEvalBlockV(cb, 2, pSender, pSize);

    hb_itemRelease(pSender);
    hb_itemRelease(pSize);
  }
}

void QWebFrameSlots::iconChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "iconChanged()");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QWEBFRAME");

    hb_vmEvalBlockV(cb, 1, pSender);

    hb_itemRelease(pSender);
  }
}

void QWebFrameSlots::initialLayoutCompleted()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "initialLayoutCompleted()");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QWEBFRAME");

    hb_vmEvalBlockV(cb, 1, pSender);

    hb_itemRelease(pSender);
  }
}

void QWebFrameSlots::javaScriptWindowObjectCleared()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "javaScriptWindowObjectCleared()");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QWEBFRAME");

    hb_vmEvalBlockV(cb, 1, pSender);

    hb_itemRelease(pSender);
  }
}

void QWebFrameSlots::loadFinished(bool ok)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "loadFinished(bool)");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QWEBFRAME");
    PHB_ITEM pOk = hb_itemPutL(NULL, ok);

    hb_vmEvalBlockV(cb, 2, pSender, pOk);

    hb_itemRelease(pSender);
    hb_itemRelease(pOk);
  }
}

void QWebFrameSlots::loadStarted()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "loadStarted()");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QWEBFRAME");

    hb_vmEvalBlockV(cb, 1, pSender);

    hb_itemRelease(pSender);
  }
}

void QWebFrameSlots::pageChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "pageChanged()");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QWEBFRAME");

    hb_vmEvalBlockV(cb, 1, pSender);

    hb_itemRelease(pSender);
  }
}

void QWebFrameSlots::titleChanged(const QString &title)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "titleChanged(QString)");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QWEBFRAME");
    PHB_ITEM pTitle = hb_itemPutC(NULL, QSTRINGTOSTRING(title));

    hb_vmEvalBlockV(cb, 2, pSender, pTitle);

    hb_itemRelease(pSender);
    hb_itemRelease(pTitle);
  }
}

void QWebFrameSlots::urlChanged(const QUrl &url)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt4xHb::Signals_return_codeblock(object, "urlChanged(QUrl)");

  if (cb != NULL)
  {
    PHB_ITEM pSender = Qt4xHb::Signals_return_qobject(object, "QWEBFRAME");
    PHB_ITEM pUrl = Qt4xHb::Signals_return_object((void *)&url, "QURL");

    hb_vmEvalBlockV(cb, 2, pSender, pUrl);

    hb_itemRelease(pSender);
    hb_itemRelease(pUrl);
  }
}

void QWebFrameSlots_connect_signal(const QString &signal, const QString &slot)
{
  QWebFrame *obj = qobject_cast<QWebFrame *>(Qt4xHb::getQObjectPointerFromSelfItem());

  if (obj != NULL)
  {
    QWebFrameSlots *s = QCoreApplication::instance()->findChild<QWebFrameSlots *>();

    if (s == NULL)
    {
      s = new QWebFrameSlots();
      s->moveToThread(QCoreApplication::instance()->thread());
      s->setParent(QCoreApplication::instance());
    }

    hb_retl(Qt4xHb::Signals_connection_disconnection(s, signal, slot));
  }
  else
  {
    hb_retl(false);
  }
}
